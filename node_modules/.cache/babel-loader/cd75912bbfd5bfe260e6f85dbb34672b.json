{"ast":null,"code":"export const revealed = (arr, x, y, newNonMinesCount) => {\n  console.log(arr[x][y]);\n  if (arr[x][y].revealed) return;\n  let flipped = [];\n  flipped.push(arr[x][y]);\n\n  while (flipped.length !== 0) {\n    let single = flipped.pop();\n\n    if (!single.revealed) {\n      newNonMinesCount--;\n      single.revealed = true;\n    }\n\n    if (single.value !== 0) break; // Bottom - Right\n\n    if (single.x > 0 && single.y > 0 && arr[single.x - 1][single.y - 1].value === 0 && !arr[single.x - 1][single.y - 1].revealed) flipped.push(arr[single.x - 1][single.y - 1]); // Bottom - Left\n\n    if (single.x < arr.length - 1 && single.y < arr[0].length - 1 && arr[single.x + 1][single.y + 1].value === 0 && !arr[single.x + 1][single.y + 1].revealed) flipped.push(arr[single.x + 1][single.y + 1]); // Top - Left\n\n    if (single.x < arr.length - 1 && single.y > 0 && arr[single.x + 1][single.y - 1].value === 0 && !arr[single.x + 1][single.y - 1].revealed) flipped.push(arr[single.x + 1][single.y - 1]); // Top - Right\n\n    if (single.x > 0 && single.y < arr[0].length - 1 && arr[single.x - 1][single.y + 1].value === 0 && !arr[single.x - 1][single.y + 1].revealed) flipped.push(arr[single.x - 1][single.y + 1]); // Single ones\n    // Top\n\n    if (single.x > 0 && arr[single.x - 1][single.y].value === 0 && !arr[single.x - 1][single.y].revealed) flipped.push(arr[single.x - 1][single.y]); // Bottom\n\n    if (single.x < arr.length - 1 && arr[single.x + 1][single.y].value === 0 && !arr[single.x + 1][single.y].revealed) flipped.push(arr[single.x + 1][single.y]); // Left\n\n    if (single.y > 0 && arr[single.x][single.y - 1].value === 0 && !arr[single.x][single.y - 1].revealed) flipped.push(arr[single.x][single.y - 1]); // Right\n\n    if (single.y < arr[0].length - 1 && arr[single.x][single.y + 1].value === 0 && !arr[single.x][single.y + 1].revealed) flipped.push(arr[single.x][single.y + 1]); // Start reveal items\n    // Top left\n\n    if (single.x > 0 && single.y > 0 && !arr[single.x - 1][single.y - 1].revealed) {\n      arr[single.x - 1][single.y - 1].revealed = true;\n      newNonMinesCount--;\n    } // Left\n\n\n    if (single.y > 0 && !arr[single.x][single.y - 1].revealed) {\n      arr[single.x][single.y - 1].revealed = true;\n      newNonMinesCount--;\n    } // Bottom left\n\n\n    if (single.x < arr.length - 1 && single.y > 0 && !arr[single.x + 1][single.y - 1].revealed) {\n      arr[single.x + 1][single.y - 1].revealed = true;\n      newNonMinesCount--;\n    } // Bottom\n\n\n    if (single.x < arr.length - 1 && !arr[single.x + 1][single.y].revealed) {\n      arr[single.x + 1][single.y].revealed = true;\n      newNonMinesCount--;\n    } // Bottom right\n\n\n    if (single.x < arr.length - 1 && single.y < arr[0].length - 1 && !arr[single.x + 1][single.y + 1].revealed) {\n      arr[single.x + 1][single.y + 1].revealed = true;\n      newNonMinesCount--;\n    } // Right\n\n\n    if (single.y < arr[0].length - 1 && !arr[single.x][single.y + 1].revealed) {\n      arr[single.x][single.y + 1].revealed = true;\n      newNonMinesCount--;\n    } // Top right\n\n\n    if (single.x > 0 && single.y < arr[0].length - 1 && !arr[single.x - 1][single.y + 1].revealed) {\n      arr[single.x - 1][single.y + 1].revealed = true;\n      newNonMinesCount--;\n    } // Top\n\n\n    if (single.x > 0 && !arr[single.x - 1][single.y].revealed) {\n      arr[single.x - 1][single.y].revealed = true;\n      newNonMinesCount--;\n    }\n  }\n\n  return {\n    arr,\n    newNonMinesCount\n  };\n};","map":{"version":3,"sources":["/Users/anitalu/Desktop/web/minesweeper/src/util/reveal.js"],"names":["revealed","arr","x","y","newNonMinesCount","console","log","flipped","push","length","single","pop","value"],"mappings":"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","sourcesContent":["export const revealed = (arr, x, y, newNonMinesCount) => {\n    console.log(arr[x][y]);\n    if (arr[x][y].revealed) return;\n\n    let flipped = [];\n    flipped.push(arr[x][y]);\n    while (flipped.length !== 0){\n        let single = flipped.pop();\n        if (!single.revealed){\n            newNonMinesCount--;\n            single.revealed = true;\n        }\n        if(single.value !== 0) break;\n\n        // Bottom - Right\n        if(single.x > 0 && single.y > 0 && arr[single.x - 1][single.y - 1].value === 0 && !arr[single.x - 1][single.y - 1].revealed)\n            flipped.push(arr[single.x - 1][single.y - 1]);\n        // Bottom - Left\n        if(single.x < arr.length - 1 && single.y < arr[0].length - 1 && arr[single.x + 1][single.y + 1].value === 0 && !arr[single.x + 1][single.y + 1].revealed)\n            flipped.push(arr[single.x + 1][single.y + 1]);\n        // Top - Left\n        if(single.x < arr.length - 1 && single.y > 0 && arr[single.x + 1][single.y - 1].value === 0 && !arr[single.x + 1][single.y - 1].revealed)\n            flipped.push(arr[single.x + 1][single.y - 1]);\n        // Top - Right\n        if(single.x > 0 && single.y < arr[0].length - 1 && arr[single.x - 1][single.y + 1].value === 0 && !arr[single.x - 1][single.y + 1].revealed)\n            flipped.push(arr[single.x - 1][single.y + 1]);\n        \n        // Single ones\n\n        // Top\n        if (single.x > 0 && arr[single.x - 1][single.y].value === 0 && !arr[single.x - 1][single.y].revealed)\n            flipped.push(arr[single.x - 1][single.y]);\n        // Bottom\n        if (single.x < arr.length - 1 && arr[single.x + 1][single.y].value === 0 && !arr[single.x + 1][single.y].revealed)\n            flipped.push(arr[single.x + 1][single.y]);\n        // Left\n        if (single.y > 0 && arr[single.x][single.y - 1].value === 0 && !arr[single.x][single.y - 1].revealed)\n            flipped.push(arr[single.x][single.y - 1]);\n        // Right\n        if (single.y < arr[0].length - 1  && arr[single.x][single.y + 1].value === 0 && !arr[single.x][single.y + 1].revealed)\n            flipped.push(arr[single.x][single.y + 1]);\n\n        // Start reveal items\n        \n        // Top left\n        if(single.x > 0 && single.y > 0 && !arr[single.x - 1][single.y - 1].revealed){\n            arr[single.x - 1][single.y - 1].revealed = true;\n            newNonMinesCount--;\n        }\n        // Left\n        if(single.y > 0 && !arr[single.x][single.y - 1].revealed){\n            arr[single.x][single.y - 1].revealed = true;\n            newNonMinesCount--;\n        }\n        // Bottom left\n        if(single.x < arr.length - 1 && single.y > 0 && !arr[single.x + 1][single.y - 1].revealed){\n            arr[single.x + 1][single.y - 1].revealed = true;\n            newNonMinesCount--;\n        }\n        // Bottom\n        if(single.x < arr.length - 1 && !arr[single.x + 1][single.y].revealed){\n            arr[single.x + 1][single.y].revealed = true;\n            newNonMinesCount--;\n        }\n        // Bottom right\n        if(single.x < arr.length - 1 && single.y < arr[0].length - 1 && !arr[single.x + 1][single.y + 1].revealed){\n            arr[single.x + 1][single.y + 1].revealed = true;\n            newNonMinesCount--;\n        }\n        // Right\n        if(single.y < arr[0].length - 1 && !arr[single.x][single.y + 1].revealed){\n            arr[single.x][single.y + 1].revealed = true;\n            newNonMinesCount--;\n        }\n        // Top right\n        if(single.x > 0 && single.y < arr[0].length - 1 && !arr[single.x - 1][single.y + 1].revealed){\n            arr[single.x - 1][single.y + 1].revealed = true;\n            newNonMinesCount--;\n        }\n        // Top\n        if(single.x > 0 && !arr[single.x - 1][single.y].revealed){\n            arr[single.x - 1][single.y].revealed = true;\n            newNonMinesCount--;\n        }\n    }\n    return {arr, newNonMinesCount};\n};\n"]},"metadata":{},"sourceType":"module"}