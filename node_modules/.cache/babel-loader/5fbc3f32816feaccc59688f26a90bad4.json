{"ast":null,"code":"var _jsxFileName = \"/Users/anitalu/Desktop/web/minesweeper/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport createBoard from '../util/createBoard';\nimport Cell from './Cell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Board = () => {\n  _s();\n\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    function freshBoard() {\n      const newBoard = createBoard(5, 5, 10);\n      setGrid(newBoard);\n    }\n\n    freshBoard();\n  }, []);\n\n  const updateFlag = (e, x, y) => {\n    e.preventDefault();\n    let newGrid = JSON.parse(JSON.stringify(grid));\n    console.log(newGrid[x][y]); // newGrid[x][y].flagged = true\n    // setGrid(newGrid);\n  };\n\n  if (!grid.board) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n\n  return grid.board.map(singleRow => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: singleRow.map(singleBlock => {\n        return /*#__PURE__*/_jsxDEV(Cell, {\n          detail: singleBlock,\n          updateFlag: updateFlag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  });\n};\n\n_s(Board, \"w1YSakViRD9z3AUkL5Qso5coyFg=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/Users/anitalu/Desktop/web/minesweeper/src/components/Board.js"],"names":["React","useEffect","useState","createBoard","Cell","Board","grid","setGrid","freshBoard","newBoard","updateFlag","e","x","y","preventDefault","newGrid","JSON","parse","stringify","console","log","board","map","singleRow","display","singleBlock"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,aAASO,UAAT,GAAqB;AACjB,YAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAA5B;AACAI,MAAAA,OAAO,CAACE,QAAD,CAAP;AACH;;AACDD,IAAAA,UAAU;AACb,GANQ,EAMN,EANM,CAAT;;AAQA,QAAME,UAAU,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AAC5BF,IAAAA,CAAC,CAACG,cAAF;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,IAAf,CAAX,CAAd;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACH,CAAD,CAAP,CAAWC,CAAX,CAAZ,EAH4B,CAI5B;AACA;AACH,GAND;;AAQA,MAAI,CAACP,IAAI,CAACe,KAAV,EAAgB;AACZ,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,SAAOf,IAAI,CAACe,KAAL,CAAWC,GAAX,CAAeC,SAAS,IAAI;AAC/B,wBACI;AAAK,MAAA,KAAK,EAAI;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AAAA,gBACKD,SAAS,CAACD,GAAV,CAAeG,WAAD,IAAiB;AAC5B,4BACI,QAAC,IAAD;AAAM,UAAA,MAAM,EAAIA,WAAhB;AAA6B,UAAA,UAAU,EAAIf;AAA3C;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVM,CAAP;AAcH,CArCD;;GAAML,K;;KAAAA,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport createBoard from '../util/createBoard';\nimport Cell from './Cell';\n\nconst Board = () => {\n    const [grid, setGrid] = useState([]);\n\n    useEffect(() => {\n        function freshBoard(){\n            const newBoard = createBoard(5, 5, 10);\n            setGrid(newBoard);\n        }\n        freshBoard();\n    }, []);\n\n    const updateFlag = (e, x, y) => {\n        e.preventDefault();\n        let newGrid = JSON.parse(JSON.stringify(grid));\n        console.log(newGrid[x][y])\n        // newGrid[x][y].flagged = true\n        // setGrid(newGrid);\n    }\n\n    if (!grid.board){\n        return <div>Loading...</div>;\n    }\n\n    return grid.board.map(singleRow => {\n        return (\n            <div style = {{display: \"flex\"}}>\n                {singleRow.map((singleBlock) => {\n                    return (\n                        <Cell detail = {singleBlock} updateFlag = {updateFlag}/>\n                    );\n                })}\n            </div>\n        );\n    })\n\n    \n\n}\n\nexport default Board"]},"metadata":{},"sourceType":"module"}