{"ast":null,"code":"var _jsxFileName = \"/Users/anitalu/Desktop/web/minesweeper/src/components/Cell.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cell({\n  detail,\n  updateFlag,\n  revealCell\n}) {\n  const style = {\n    background: detail.revealed ? detail.value === 'ðŸ’£' ? '#880000' : bombCheckPattern(detail.x, detail.y) : checkPattern(detail.x, detail.y)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      onContextMenu: e => updateFlag(e, detail.x, detail.y),\n      onClick: () => revealCell(detail.x, detail.y),\n      className: \"cellStyle\",\n      children: detail.revealed ? detail.value != 0 && detail.value : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = Cell;\n\nconst bombCheckPattern = (x, y) => {\n  if (x % 2 === 0 && y % 2 === 0) return '#e5c29f';else if (x % 2 === 0 && y % 2 !== 0) return '#d7b899';else if (x % 2 !== 0 && y % 2 === 0) return '#d7b899';else return '#e5c29f';\n};\n\nconst checkPattern = (x, y) => {\n  if (x % 2 === 0 && y % 2 === 0) return '#aad751';else if (x % 2 === 0 && y % 2 !== 0) return '#a2d249';else if (x % 2 !== 0 && y % 2 === 0) return '#a2d249';else return '#aad751';\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"sources":["/Users/anitalu/Desktop/web/minesweeper/src/components/Cell.js"],"names":["React","Cell","detail","updateFlag","revealCell","style","background","revealed","value","bombCheckPattern","x","y","checkPattern","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,CAAc;AAACC,EAAAA,MAAD;AAASC,EAAAA,UAAT;AAAqBC,EAAAA;AAArB,CAAd,EAA+C;AAC1D,QAAMC,KAAK,GAAG;AACVC,IAAAA,UAAU,EAAEJ,MAAM,CAACK,QAAP,GACRL,MAAM,CAACM,KAAP,KAAiB,IAAjB,GAAwB,SAAxB,GAAoCC,gBAAgB,CAACP,MAAM,CAACQ,CAAR,EAAWR,MAAM,CAACS,CAAlB,CAD5C,GACmEC,YAAY,CAACV,MAAM,CAACQ,CAAR,EAAWR,MAAM,CAACS,CAAlB;AAFjF,GAAd;AAMA,sBACI;AAAA,2BACI;AACI,MAAA,aAAa,EAAKE,CAAD,IAAOV,UAAU,CAACU,CAAD,EAAIX,MAAM,CAACQ,CAAX,EAAcR,MAAM,CAACS,CAArB,CADtC;AAEI,MAAA,OAAO,EAAI,MAAMP,UAAU,CAACF,MAAM,CAACQ,CAAR,EAAWR,MAAM,CAACS,CAAlB,CAF/B;AAGI,MAAA,SAAS,EAAG,WAHhB;AAAA,gBAKKT,MAAM,CAACK,QAAP,GAAkBL,MAAM,CAACM,KAAP,IAAgB,CAAhB,IAAqBN,MAAM,CAACM,KAA9C,GAAsD;AAL3D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;KAnBuBP,I;;AAuBxB,MAAMQ,gBAAgB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/B,MAAGD,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeC,CAAC,GAAG,CAAJ,KAAU,CAA5B,EAA+B,OAAO,SAAP,CAA/B,KACK,IAAID,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeC,CAAC,GAAG,CAAJ,KAAU,CAA7B,EAAgC,OAAO,SAAP,CAAhC,KACA,IAAID,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeC,CAAC,GAAG,CAAJ,KAAU,CAA7B,EAAiC,OAAO,SAAP,CAAjC,KACA,OAAO,SAAP;AACR,CALD;;AAOA,MAAMC,YAAY,GAAG,CAACF,CAAD,EAAIC,CAAJ,KAAU;AAC3B,MAAGD,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeC,CAAC,GAAG,CAAJ,KAAU,CAA5B,EAA+B,OAAO,SAAP,CAA/B,KACK,IAAID,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeC,CAAC,GAAG,CAAJ,KAAU,CAA7B,EAAgC,OAAO,SAAP,CAAhC,KACA,IAAID,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeC,CAAC,GAAG,CAAJ,KAAU,CAA7B,EAAiC,OAAO,SAAP,CAAjC,KACA,OAAO,SAAP;AACR,CALD","sourcesContent":["import React from \"react\";\n\nexport default function Cell({detail, updateFlag, revealCell}){\n    const style = {\n        background: detail.revealed ? \n            detail.value === 'ðŸ’£' ? '#880000' : bombCheckPattern(detail.x, detail.y) : checkPattern(detail.x, detail.y),\n    }\n\n\n    return (\n        <div>\n            <div \n                onContextMenu = {(e) => updateFlag(e, detail.x, detail.y) }\n                onClick = {() => revealCell(detail.x, detail.y)}\n                className = \"cellStyle\"\n            >\n                {detail.revealed ? detail.value != 0 && detail.value : \"\"}\n                {/* {detail.value != 0 && detail.value} */}\n            </div>\n        </div>\n    );\n}\n\n\n\nconst bombCheckPattern = (x, y) => {\n    if(x % 2 === 0 && y % 2 === 0) return '#e5c29f';\n    else if (x % 2 === 0 && y % 2 !== 0) return '#d7b899';\n    else if (x % 2 !== 0 && y % 2 === 0)  return '#d7b899';\n    else return '#e5c29f';\n}\n\nconst checkPattern = (x, y) => {\n    if(x % 2 === 0 && y % 2 === 0) return '#aad751';\n    else if (x % 2 === 0 && y % 2 !== 0) return '#a2d249';\n    else if (x % 2 !== 0 && y % 2 === 0)  return '#a2d249';\n    else return '#aad751';\n}\n"]},"metadata":{},"sourceType":"module"}